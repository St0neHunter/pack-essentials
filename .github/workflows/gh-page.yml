name: github pages

on:
  push:
    branches:
      - main  # Specify the branch you want to trigger the build on
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 19

      - name: Cache dependencies for Go
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-

      - name: Cache dependencies for npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install --frozen-lockfile

      - name: Build WASM
        run: ./build_wasm.sh

      - name: Build React app
        run: npm run build

      - name: Copy index files
        run: |
          cp dist/index.html dist/encrypt.html
          cp dist/index.html dist/decrypt.html

      # Debugging: Ensure dist folder exists and is not empty
      - name: List dist directory
        run: ls -la dist

      # Upload dist folder as artifact for deployment
      - name: Upload artifact
        uses: actions/upload-artifact@v2  # Use v2 to upload the artifact (not v3)
        with:
          name: dist  # The artifact name should match what you're downloading in the deploy job
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Download the artifact from the build job
      - name: Download artifact
        uses: actions/download-artifact@v2  # Use v2 for downloading the artifact
        with:
          name: dist  # Ensure the artifact name matches the one used in upload
          path: ./dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

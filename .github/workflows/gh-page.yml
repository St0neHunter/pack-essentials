name: github pages

# Define events that trigger the workflow
on:
  # Triggered when a push is made to the repository
  push:
    branches:
      - main  # Trigger when pushing to the main branch (or your primary branch)
  # Triggered manually using the 'Run workflow' button
  workflow_dispatch:

# Define the permissions required to run the workflow
permissions:
  # Permission to read file contents
  contents: read
  # Permission to write to GitHub Pages
  pages: write
  # Permission to write an ID token
  id-token: write

# Define the jobs for the workflow
jobs:
  # Build job
  build:
    # Define the virtual machine environment
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Go environment
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.20'

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19'

      # Cache Go dependencies
      - name: Cache Go dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-

      # Cache npm dependencies
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install dependencies from package.json
      - name: Install dependencies
        run: npm install --frozen-lockfile

      # Build WebAssembly (WASM)
      - name: Build WASM
        run: ./build_wasm.sh

      # Build React application
      - name: Build React app
        run: npm run build

      # Copy index.html to additional pages
      - name: Copy index.html to additional pages
        run: |
          cp dist/index.html dist/encrypt.html
          cp dist/index.html dist/decrypt.html

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Deploy the built application to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          branch: gh-pages  # Specify the branch to deploy to
          folder: dist      # The folder where your built assets reside (dist)

